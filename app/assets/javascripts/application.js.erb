// This is a manifest file that'll be compiled into including all the files listed below.
// Add new JavaScript/Coffee code in separate files in this directory and they'll automatically
// be included in the compiled file accessible from http://example.com/assets/application.js
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// the compiled file.
//
//= require jquery
//= require jquery_ujs
//= require rails.validations
//= require jquery.remotipart
//= require bootstrap-alerts
//= require bootstrap-dropdown
//= require bootstrap-modal
//= require bootstrap-tabs
//= require bootstrap-twipsy
//= require bootstrap-popover
<%
  app = Rails.application.routes.url_helpers
%>
$(function() {
  $('#recent-videos').load('<%= app.recent_videos_path %>');
  $('#popular-videos').load('<%= app.popular_videos_path %>');
  $('#my-videos').load('<%= app.my_videos_path %>');
  $('.cancel').click(function() {
    $(document).trigger("hide-popovers");
  });
  $(".alert-message").alert();
  
  $(".dropdown").dropdown();
  $(".tabs").tabs();
  $("#my-videos-menu-item").click(function() {
    $("#my-videos-tab-link").trigger("click")
  });
});

$(document).bind("reset-form", function(event) {
  $('#upload-form').each (function(){
    this.reset();
  });
  $('#upload-form .help-block.error').remove();
});

$(document).bind("hide-popovers", function(event) {
  $("#modal-recorder").modal("hide");
  $("#modal-uploader").modal("hide");
  $(".video-popup").each(function(i,e) {
    if($(e).is(":visible")) $(e).modal("hide")
  });
  
  $("a[rel=popover]").each(function(i,e) {
    if($(e).is(":visible")) $(e).popover("hide")
  });
});

$(document).bind("list-loaded", function(event) {
  $("a[rel=popover]")
  .popover({
    offset: 10,
    html: true,
    placement: 'below'
  })
  .click(function(e) {
    e.preventDefault()
  });

  // delete video
  $("a.delete-video").unbind("click").click(function(event) {
    if(confirm("Do you want to delete this video?")) {
      $(this).addClass("disabled").unbind("click");
      $.post(this.href, {id: $(this).attr("data-video-id")}, function() {}, "json")
        .success(function(data, status, jqXHR) {
          $(document).trigger("hide-popovers");
          $.alert("<%= I18n.t("videos.delete.success") %>", "success");
          $(".thumb[data-video-id=" + data.video_id + "]").hide();
          return false;
        })
        .error(function(data, status, jqXHR) {
          $.alert("<%= I18n.t("videos.delete.error") %>", "error");
          $(document).trigger("hide-popovers");
          return false;
        });
    }
    event.preventDefault();
  });
  
  // vote video
  $("a.vote-video.active").unbind("click").click(function(event) {
    $(this).removeClass("active").addClass("disabled").unbind("click");
    $.post($(this).attr("data-vote-video-url"), {}, "JSON")
      .success(function(data, status, jqXHR) {
        var link = $("a[data-video-id=" + data.video.video_id + "]");
        link.removeClass("disabled")
          .addClass("voted")
          .html("<%= I18n.t("videos.show.voted") %>");
        $(document).trigger("hide-popovers");
        $.alert("<%= I18n.t("videos.votes.success") %>", "success");
        return false;
      })
      .error(function(data, status, jqXHR) {
        $.alert("<%= I18n.t("videos.votes.error") %>", "error");
        $(document).trigger("hide-popovers");
        return false;
      });
    event.preventDefault();
  });
  
  $('.cancel').unbind("click").click(function() {
    $(document).trigger("hide-popovers");
  });
  
  $('form[data-validate]').each(function(index,form) {
    if(typeof($(form).data("data-validate-binding")) === "undefined") {
      // $(form).validate();
      $(form).data("data-validate-binding", "true");
    }
  });
  
  twttr.widgets.load();
  FB.XFBML.parse();
});

jQuery.extend({
  /* 
   *  E.g. $.alert("This is an error!", "error"); 
   */
  alert: function(text, type) {
    if(typeof(type) === "undefined") type = "info";
    var selector = ".topbar .alert-message" + "." + type;
    $(selector).remove();
    $(".topbar").prepend('<div class="alert-message block-message ' + type + '"><a class="close" href="#">Ã—</a></div>');
    $(".topbar .alert-message" + "." + type).alert();
    $(selector).append(text);
    $(selector).show();
  }
});

clientSideValidations.formBuilders['SimpleForm::FormBuilder']['add'] = function(element, settings, message) {
  if (element.data('valid') !== false) {
    var wrapper = element.closest(settings.wrapper_tag);
    wrapper.addClass(settings.wrapper_error_class);
    var errorElement = $('<' + settings.error_tag + ' class="' + settings.error_class + '">' + message + '</' + settings.error_tag + '>');
    wrapper.append(errorElement);
    element.parents("div.clearfix").addClass("error");
  } else {
    element.parent().find(settings.error_tag + '.' + settings.error_class).text(message);
  }
}

clientSideValidations.formBuilders['SimpleForm::FormBuilder']['remove'] = function(element, settings) {
  var wrapper = element.closest(settings.wrapper_tag + '.' + settings.wrapper_error_class);
  wrapper.removeClass(settings.wrapper_error_class);
  var errorElement = wrapper.find(settings.error_tag + '.' + settings.error_class);
  errorElement.remove();
  element.parents("div.clearfix").removeClass("error");
}

function recordDone(username, user_video_number, video_id) {
  var json = {video:{video_id: video_id, source: "webcam"}}
  $.post('<%= app.videos_path %>', json, function(data) {}, "script");
}

function recordStopped() {
  $(document).trigger("hide-popovers");
}
